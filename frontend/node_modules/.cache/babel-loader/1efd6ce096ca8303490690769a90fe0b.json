{"ast":null,"code":"// import { FormControl, RadioGroup, Typography } from \"@material-ui/core\";\n// import { Radio } from \"@material-ui/core\";\n// import {\n//   Card,\n//   CardHeader,\n//   withStyles,\n//   IconButton,\n//   CardContent,\n//   CardActionArea,\n//   Checkbox,\n//   CardActions,\n//   FormControlLabel,\n//   Button,\n//   Grid,\n//   Link,\n// } from \"@material-ui/core\";\n// import CloseIcon from \"@material-ui/icons/Close\";\n// import { useState } from \"react\";\n// import Modal from \"../../components/Modal\";\n// import GlobalStyles from \"../../styles/Styles\";\n\n// const TermsAndConditionModal = ({ open, handleMenuTypeClick }) => {\n//   // const {\n//     // classes,\n//     // handleAgree,\n//     // isChecked,\n//     // toggleCheckbox,\n//     // data,\n//   // } = props;\n//   console.log(\"checking rthe ts\");\n\n//   const [radio, setRadio] = useState(null);\n//   const handleRadioBtnChange = (e) => {\n//     setRadio(e.target.name);\n//   };\n\n//   // const { mainText, specificPermissions, acceptance, additionalDetails } = data;\n\n//   return (\n//     <Modal\n//       disableEscapeKeyDown\n//       disableBackdropClick\n//       open={open}\n//       // handleClose={handleClose}\n//     >\n//       {/* <Card className={classes.card}> */}\n//       <Card >\n//         <CardHeader title={<span>Terms And Conditions</span>} />\n//         <CardContent\n//           style={{\n//             whiteSpace: \"break-spaces\",\n//             maxHeight: \"50vh\",\n//             overflow: \"auto\",\n//           }}\n//         >\n//           <Grid container spacing={1}>\n//             <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n//               {/* {mainText.length &&\n//                 mainText.map((text) => {\n//                   if (text.active) return <span>\n//                     {text.value}</span>;\n//                 })} */}\n//             </Grid>\n\n//             <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n//                   {/* {specificPermissions.length &&\n//                     specificPermissions.map((permission) => {\n//                       if (permission.active) {\n//                         return (\n//                           <div className={classes.radioBox}>\n//                             <input\n//                               id={permission.code}\n//                               type=\"radio\"\n//                               name={permission.code}\n//                               onChange={handleRadioBtnChange}\n//                               checked={radio === permission.code}\n//                               className={classes.radioBtn}\n//                             />\n//                             <label htmlFor={permission.code} className={classes.radiolabel}>\n//                               {permission.value}\n//                             </label>\n//                             <br />\n//                             <br />\n//                           </div>\n//                         );\n//                       }\n//                     })} */}\n//             </Grid>\n\n//             <Grid item xs={12} sm={12} md={12} lg={12} xl={12} style={{ marginTop: \"15px\" }}>\n//               {/* {additionalDetails.length &&\n//                 additionalDetails.map((text) => {\n//                   if (text.active) {\n//                     return <span>{text.value}</span>;\n//                   }\n//                 })} */}\n//             </Grid>\n//           </Grid>\n//         </CardContent>\n//         <CardActions>\n//           <Grid container spacing={0}>\n//             <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n//               {/* {acceptance.length &&\n//                 acceptance.map((text) => {\n//                   if (text.active) {\n//                     return (\n//                       <FormControlLabel\n//                         control={\n//                           <Checkbox\n//                             color=\"primary\"\n//                             name=\"termsandconditions\"\n//                             value={isChecked}\n//                             onChange={toggleCheckbox}\n//                             disabled={!radio}\n//                           />\n//                         }\n//                         label={text.value}\n//                       />\n//                     );\n//                   }\n//                 })} */}\n//             </Grid>\n//             <Grid\n//               item\n//               xs={6}\n//               sm={6}\n//               md={8}\n//               lg={9}\n//               xl={9}\n//               // className={classes.flexEnd}\n//             >\n//               <Button onClick={()=>open(false)} color=\"primnary\" size=\"large\">\n//                 Cancel\n//               </Button>\n//             </Grid>\n//             <Grid\n//               item\n//               xs={6}\n//               sm={6}    \n//               className={classes.flexEnd}\n//             >\n//               <Button\n//                 // disabled={!isChecked}\n//                 // onClick={() =>\n//                 //   handleAgree(\n//                 //     radio,\n//                 //     mainText.filter((text) => text.active)[0].code,\n//                 //     additionalDetails.filter((text) => text.active)[0].code,\n//                 //     acceptance.filter((text) => text.active)[0].code\n//                 //   )\n//                 // }\n//                 onClick={handleMenuTypeClick}\n//                 color=\"primary\"\n//                 variant=\"contained\"\n//                 size=\"large\"\n//               >\n//                 Accept and continue\n//               </Button>\n//             </Grid>\n//           </Grid>\n//         </CardActions>\n//       </Card>\n//     </Modal>\n//   );\n// };\n\n// export default withStyles(GlobalStyles)(TermsAndConditionModal);","map":{"version":3,"names":[],"sources":["E:/bhasadaan/DataDaan-Project/frontend/src/ui/container/UploadData/TermsAndConditionsModal.jsx"],"sourcesContent":["// import { FormControl, RadioGroup, Typography } from \"@material-ui/core\";\r\n// import { Radio } from \"@material-ui/core\";\r\n// import {\r\n//   Card,\r\n//   CardHeader,\r\n//   withStyles,\r\n//   IconButton,\r\n//   CardContent,\r\n//   CardActionArea,\r\n//   Checkbox,\r\n//   CardActions,\r\n//   FormControlLabel,\r\n//   Button,\r\n//   Grid,\r\n//   Link,\r\n// } from \"@material-ui/core\";\r\n// import CloseIcon from \"@material-ui/icons/Close\";\r\n// import { useState } from \"react\";\r\n// import Modal from \"../../components/Modal\";\r\n// import GlobalStyles from \"../../styles/Styles\";\r\n\r\n// const TermsAndConditionModal = ({ open, handleMenuTypeClick }) => {\r\n//   // const {\r\n//     // classes,\r\n//     // handleAgree,\r\n//     // isChecked,\r\n//     // toggleCheckbox,\r\n//     // data,\r\n//   // } = props;\r\n//   console.log(\"checking rthe ts\");\r\n\r\n//   const [radio, setRadio] = useState(null);\r\n//   const handleRadioBtnChange = (e) => {\r\n//     setRadio(e.target.name);\r\n//   };\r\n\r\n//   // const { mainText, specificPermissions, acceptance, additionalDetails } = data;\r\n\r\n//   return (\r\n//     <Modal\r\n//       disableEscapeKeyDown\r\n//       disableBackdropClick\r\n//       open={open}\r\n//       // handleClose={handleClose}\r\n//     >\r\n//       {/* <Card className={classes.card}> */}\r\n//       <Card >\r\n//         <CardHeader title={<span>Terms And Conditions</span>} />\r\n//         <CardContent\r\n//           style={{\r\n//             whiteSpace: \"break-spaces\",\r\n//             maxHeight: \"50vh\",\r\n//             overflow: \"auto\",\r\n//           }}\r\n//         >\r\n//           <Grid container spacing={1}>\r\n//             <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n//               {/* {mainText.length &&\r\n//                 mainText.map((text) => {\r\n//                   if (text.active) return <span>\r\n//                     {text.value}</span>;\r\n//                 })} */}\r\n//             </Grid>\r\n\r\n//             <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n//                   {/* {specificPermissions.length &&\r\n//                     specificPermissions.map((permission) => {\r\n//                       if (permission.active) {\r\n//                         return (\r\n//                           <div className={classes.radioBox}>\r\n//                             <input\r\n//                               id={permission.code}\r\n//                               type=\"radio\"\r\n//                               name={permission.code}\r\n//                               onChange={handleRadioBtnChange}\r\n//                               checked={radio === permission.code}\r\n//                               className={classes.radioBtn}\r\n//                             />\r\n//                             <label htmlFor={permission.code} className={classes.radiolabel}>\r\n//                               {permission.value}\r\n//                             </label>\r\n//                             <br />\r\n//                             <br />\r\n//                           </div>\r\n//                         );\r\n//                       }\r\n//                     })} */}\r\n//             </Grid>\r\n\r\n//             <Grid item xs={12} sm={12} md={12} lg={12} xl={12} style={{ marginTop: \"15px\" }}>\r\n//               {/* {additionalDetails.length &&\r\n//                 additionalDetails.map((text) => {\r\n//                   if (text.active) {\r\n//                     return <span>{text.value}</span>;\r\n//                   }\r\n//                 })} */}\r\n//             </Grid>\r\n//           </Grid>\r\n//         </CardContent>\r\n//         <CardActions>\r\n//           <Grid container spacing={0}>\r\n//             <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n//               {/* {acceptance.length &&\r\n//                 acceptance.map((text) => {\r\n//                   if (text.active) {\r\n//                     return (\r\n//                       <FormControlLabel\r\n//                         control={\r\n//                           <Checkbox\r\n//                             color=\"primary\"\r\n//                             name=\"termsandconditions\"\r\n//                             value={isChecked}\r\n//                             onChange={toggleCheckbox}\r\n//                             disabled={!radio}\r\n//                           />\r\n//                         }\r\n//                         label={text.value}\r\n//                       />\r\n//                     );\r\n//                   }\r\n//                 })} */}\r\n//             </Grid>\r\n//             <Grid\r\n//               item\r\n//               xs={6}\r\n//               sm={6}\r\n//               md={8}\r\n//               lg={9}\r\n//               xl={9}\r\n//               // className={classes.flexEnd}\r\n//             >\r\n//               <Button onClick={()=>open(false)} color=\"primnary\" size=\"large\">\r\n//                 Cancel\r\n//               </Button>\r\n//             </Grid>\r\n//             <Grid\r\n//               item\r\n//               xs={6}\r\n//               sm={6}    \r\n//               className={classes.flexEnd}\r\n//             >\r\n//               <Button\r\n//                 // disabled={!isChecked}\r\n//                 // onClick={() =>\r\n//                 //   handleAgree(\r\n//                 //     radio,\r\n//                 //     mainText.filter((text) => text.active)[0].code,\r\n//                 //     additionalDetails.filter((text) => text.active)[0].code,\r\n//                 //     acceptance.filter((text) => text.active)[0].code\r\n//                 //   )\r\n//                 // }\r\n//                 onClick={handleMenuTypeClick}\r\n//                 color=\"primary\"\r\n//                 variant=\"contained\"\r\n//                 size=\"large\"\r\n//               >\r\n//                 Accept and continue\r\n//               </Button>\r\n//             </Grid>\r\n//           </Grid>\r\n//         </CardActions>\r\n//       </Card>\r\n//     </Modal>\r\n//   );\r\n// };\r\n\r\n// export default withStyles(GlobalStyles)(TermsAndConditionModal);\r\n\r\n"],"mappings},"metadata":{},"sourceType":"module"}